package com.webprj.project_green.controller;

import java.io.File;
import java.io.IOException;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.List;
import java.util.UUID;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.web.bind.annotation.PathVariable;

import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.webprj.project_green.dto.BoardDto;
import com.webprj.project_green.service.BoardService;

@RestController
@RequestMapping("/board")
public class BoardController {
	
	@Autowired
	private BoardService boardService;
	

	@PostMapping("/b_freetalk")
	public List<BoardDto> getBoardsData() {
		
		return boardService.getBoardsData();
	}

	
	@PostMapping("/checkid/{postNum}")
	public boolean checkBoardIdWithSessionId(@PathVariable int postNum) {
		System.out.println( "Check id"  + postNum);
		return false;
	}
	
	@Value("${org.zerock.upload.path}")// application.properties 변수
	private String uploadPath;
	@PostMapping("/uploadAxios")
	public void uploadFile(MultipartFile[] uploadFiles) {
		for(MultipartFile uploadFile: uploadFiles) {
			//실제 파일이름 IE나 Edge는 전체 경로가 들어옴
			String originalName = uploadFile.getOriginalFilename();
			String fileName = originalName.substring(originalName.lastIndexOf("\\") + 1);
			System.out.println(fileName);
			
			// 날짜 폴더 생성
			String folderPath = makeFolder();
			
			//UUID
			String uuid = UUID.randomUUID().toString();
			
			//저장할 파일 이름 중간에 "_"를 이용해서 구분
			String saveName = uploadPath + File.separator + uuid + "_" + fileName;
			
			Path savePath = Paths.get(saveName);
			
			try {
				uploadFile.transferTo(savePath);
			} catch (IllegalStateException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		} // endfor
	}
	private String makeFolder() {
		String str = LocalDate.now().format(DateTimeFormatter.ofPattern("yyyy/MM/dd"));
		
		String folderPath = str.replace("/", File.separator);
		
		//make folder -------
		File uploadPathFolder = new File(uploadPath, folderPath);
		if(uploadPathFolder.exists() == false) {
			uploadPathFolder.mkdirs();
		}
		return folderPath;
	}
	
}
